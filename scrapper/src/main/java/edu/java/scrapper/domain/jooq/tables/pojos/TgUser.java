/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.jooq.tables.pojos;

import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class TgUser implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long userChatId;
    private String userState;

    public TgUser() {
    }

    public TgUser(TgUser value) {
        this.userChatId = value.userChatId;
        this.userState = value.userState;
    }

    @ConstructorProperties({"userChatId", "userState"})
    public TgUser(
        @NotNull Long userChatId,
        @NotNull String userState
    ) {
        this.userChatId = userChatId;
        this.userState = userState;
    }

    /**
     * Getter for <code>TG_USER.USER_CHAT_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getUserChatId() {
        return this.userChatId;
    }

    /**
     * Setter for <code>TG_USER.USER_CHAT_ID</code>.
     */
    public void setUserChatId(@NotNull Long userChatId) {
        this.userChatId = userChatId;
    }

    /**
     * Getter for <code>TG_USER.USER_STATE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getUserState() {
        return this.userState;
    }

    /**
     * Setter for <code>TG_USER.USER_STATE</code>.
     */
    public void setUserState(@NotNull String userState) {
        this.userState = userState;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final TgUser other = (TgUser) obj;
        if (this.userChatId == null) {
            if (other.userChatId != null) {
                return false;
            }
        } else if (!this.userChatId.equals(other.userChatId)) {
            return false;
        }
        if (this.userState == null) {
            if (other.userState != null) {
                return false;
            }
        } else if (!this.userState.equals(other.userState)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userChatId == null) ? 0 : this.userChatId.hashCode());
        result = prime * result + ((this.userState == null) ? 0 : this.userState.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TgUser (");

        sb.append(userChatId);
        sb.append(", ").append(userState);

        sb.append(")");
        return sb.toString();
    }
}
