/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.jooq.tables.records;

import edu.java.scrapper.domain.jooq.tables.UsersLinks;
import java.beans.ConstructorProperties;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class UsersLinksRecord extends UpdatableRecordImpl<UsersLinksRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>USERS_LINKS.ID</code>.
     */
    public void setId(@Nullable Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>USERS_LINKS.ID</code>.
     */
    @Nullable
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>USERS_LINKS.TG_USER</code>.
     */
    public void setTgUser(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>USERS_LINKS.TG_USER</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTgUser() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>USERS_LINKS.LINK</code>.
     */
    public void setLink(@NotNull Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>USERS_LINKS.LINK</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLink() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return UsersLinks.USERS_LINKS.ID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return UsersLinks.USERS_LINKS.TG_USER;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return UsersLinks.USERS_LINKS.LINK;
    }

    @Override
    @Nullable
    public Long component1() {
        return getId();
    }

    @Override
    @NotNull
    public Long component2() {
        return getTgUser();
    }

    @Override
    @NotNull
    public Long component3() {
        return getLink();
    }

    @Override
    @Nullable
    public Long value1() {
        return getId();
    }

    @Override
    @NotNull
    public Long value2() {
        return getTgUser();
    }

    @Override
    @NotNull
    public Long value3() {
        return getLink();
    }

    @Override
    @NotNull
    public UsersLinksRecord value1(@Nullable Long value) {
        setId(value);
        return this;
    }

    @Override
    @NotNull
    public UsersLinksRecord value2(@NotNull Long value) {
        setTgUser(value);
        return this;
    }

    @Override
    @NotNull
    public UsersLinksRecord value3(@NotNull Long value) {
        setLink(value);
        return this;
    }

    @Override
    @NotNull
    public UsersLinksRecord values(@Nullable Long value1, @NotNull Long value2, @NotNull Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersLinksRecord
     */
    public UsersLinksRecord() {
        super(UsersLinks.USERS_LINKS);
    }

    /**
     * Create a detached, initialised UsersLinksRecord
     */
    @ConstructorProperties({"id", "tgUser", "link"})
    public UsersLinksRecord(@Nullable Long id, @NotNull Long tgUser, @NotNull Long link) {
        super(UsersLinks.USERS_LINKS);

        setId(id);
        setTgUser(tgUser);
        setLink(link);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersLinksRecord
     */
    public UsersLinksRecord(edu.java.scrapper.domain.jooq.tables.pojos.UsersLinks value) {
        super(UsersLinks.USERS_LINKS);

        if (value != null) {
            setId(value.getId());
            setTgUser(value.getTgUser());
            setLink(value.getLink());
            resetChangedOnNotNull();
        }
    }
}
