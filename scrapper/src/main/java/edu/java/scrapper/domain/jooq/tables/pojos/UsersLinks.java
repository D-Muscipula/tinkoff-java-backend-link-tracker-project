/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.jooq.tables.pojos;

import java.beans.ConstructorProperties;
import java.io.Serializable;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class UsersLinks implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long tgUser;
    private Long link;

    public UsersLinks() {
    }

    public UsersLinks(UsersLinks value) {
        this.id = value.id;
        this.tgUser = value.tgUser;
        this.link = value.link;
    }

    @ConstructorProperties({"id", "tgUser", "link"})
    public UsersLinks(
        @Nullable Long id,
        @NotNull Long tgUser,
        @NotNull Long link
    ) {
        this.id = id;
        this.tgUser = tgUser;
        this.link = link;
    }

    /**
     * Getter for <code>USERS_LINKS.ID</code>.
     */
    @Nullable
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>USERS_LINKS.ID</code>.
     */
    public void setId(@Nullable Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>USERS_LINKS.TG_USER</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTgUser() {
        return this.tgUser;
    }

    /**
     * Setter for <code>USERS_LINKS.TG_USER</code>.
     */
    public void setTgUser(@NotNull Long tgUser) {
        this.tgUser = tgUser;
    }

    /**
     * Getter for <code>USERS_LINKS.LINK</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLink() {
        return this.link;
    }

    /**
     * Setter for <code>USERS_LINKS.LINK</code>.
     */
    public void setLink(@NotNull Long link) {
        this.link = link;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final UsersLinks other = (UsersLinks) obj;
        if (this.id == null) {
            if (other.id != null) {
                return false;
            }
        } else if (!this.id.equals(other.id)) {
            return false;
        }
        if (this.tgUser == null) {
            if (other.tgUser != null) {
                return false;
            }
        } else if (!this.tgUser.equals(other.tgUser)) {
            return false;
        }
        if (this.link == null) {
            if (other.link != null) {
                return false;
            }
        } else if (!this.link.equals(other.link)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.tgUser == null) ? 0 : this.tgUser.hashCode());
        result = prime * result + ((this.link == null) ? 0 : this.link.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UsersLinks (");

        sb.append(id);
        sb.append(", ").append(tgUser);
        sb.append(", ").append(link);

        sb.append(")");
        return sb.toString();
    }
}
